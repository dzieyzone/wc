<?php
function mod_widgetcity_jcarousel_skin_info() {
  $skins = array();
  $skins['widgetcity'] = array(
    'title' => t('Widgetcity Skin'),
    'file' => 'skins/widgetcity/jcarousel.css',
  );
  $skins['wc'] = array(
    'title' => t('Widgetcity Classic Skin'),
    'file' => 'skins/wc/jcarousel.css',
  );

  return $skins;
}

/**
 * Implementation of hook_block().
 */
function mod_widgetcity_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks = array();
      $blocks['user_widgetcity'] = array(
        'info' => t('User Profile for WidgetCity'));
      $blocks['service_widgetcity'] = array(
        'info' => t('Service Line'));
      return $blocks;

    case 'view':
      switch ($delta) {
        case 'user_widgetcity':
          global $user;
          if ($user->uid) {
            $cart = module_invoke('uc_cart', 'get_contents');
            $cart_count = (is_array($cart)) ? count($cart) : 0;
            return array(
              'subject' => t('Widget City User Account'),
              'content' => '<span class="welcome">' . t('Welcome') . ', <strong>' . $user->name . '</strong>! (' . l('logout','logout') . ')</span>' .
                '<span class="cart-info">' . l(
                  t('View my cart( !cart_count )', array('!cart_count'=> $cart_count)), 'cart', array('html'=> TRUE)
                  ) . '</span>'
            );
          }
          else {
            return FALSE;
          }
          break;
        case 'service_widgetcity':
          return array(
            'subject' => t('Team Service Line'),
            'content' => '<img src="/' . drupal_get_path('module', 'mod_widgetcity') . '/img/team-service-line.jpg" title="Team Service Line" />'
            //'content' => theme('image', drupal_get_path('module', 'mod_widgetcity') . '/img/team-service.jpg', 'Team Service Line')
          );
        break;
    }
  }
}

// $Id: site_specific.module,v 1.43.2.7 2008/09/09 14:39:01 sun Exp $
/*
function site_specific_preprocess_page(&$vars) {
}

function site_specific_preprocess_node(&$vars) {
}
function site_specific_form_alter(&$form, $form_state, $form_id) {
  if (strstr($form_id, 'uc_product_add_to_cart_form')) {
    $node            = $form['#parameters'][2];

    $price  = '$'.number_format($node->sell_price,2);
    $retail = '$'.number_format($node->list_price,2);

    $form['qty']['#weight'] = 9;
    $form['qty']['#horz-form-item'] = 1;


    if ($retail > $price) {
      $price_output = <<<OUT
       <div class="price-retail">Retail Price <span class="price list">{$retail}</span></div>
       <div class="price-sale">SALE Only <span class="price sell">{$price}</span></div>
OUT;
    }
    else {
      $price_output = <<<OUT
       <div class="price-sale">Only <span class="price sell">{$price}</span></div>
			 <div class="no-price-retail">&nbsp;</div>
OUT;
    }

    $form['submit']['#weight'] = 10;
    $form['submit']['#prefix'] = '<div id="product-price-meta" class="clear-block">'. $price_output .'</div>';
  }
}
*/

function mod_widgetcity_feeds_parser_sources_alter(&$sources, $content_type) {
  $sources['blog_img_src'] = array(
    'name' => t('Images in blog wc feed'),
    'description' => t('Images defined in blog wc feed item.'),
    'callback' => '_mod_widgetcity_image_feed',
  );
}

function _mod_widgetcity_image_feed(FeedsImportBatch $batch, $key) {
  $item = $batch->currentItem();
  return print_r($item, true);
}
